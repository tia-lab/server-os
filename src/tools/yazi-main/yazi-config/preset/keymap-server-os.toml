# Custom keymap configuration for server-os integration
# Based on Yazi default keymap with custom help bindings

[manager]
prepend_keymap = [
	# Custom help keys for server-os
	{ on = [ "H" ], run = "help", desc = "Show help (server-os custom)" },
	{ on = [ "?" ], run = "help", desc = "Show help (server-os custom)" },
]

keymap = [
	# Navigation (keep existing h for left/back)
	{ on = [ "<Esc>" ], run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = [ "q" ],     run = "quit",               desc = "Exit the process" },
	{ on = [ "Q" ],     run = "quit --no-cwd-file", desc = "Exit the process without writing cwd-file" },
	{ on = [ "<C-z>" ], run = "suspend",            desc = "Suspend the process" },

	# Hopping
	{ on = [ "k" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "j" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<C-u>" ], run = "arrow -50%", desc = "Move cursor up half page" },
	{ on = [ "<C-d>" ], run = "arrow 50%",  desc = "Move cursor down half page" },

	{ on = [ "<C-b>" ], run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = [ "<C-f>" ], run = "arrow 100%",  desc = "Move cursor down one page" },

	{ on = [ "<PageUp>" ],   run = "arrow -50%", desc = "Move cursor up half page" },
	{ on = [ "<PageDown>" ], run = "arrow 50%",  desc = "Move cursor down half page" },

	{ on = [ "h" ], run = [ "leave", "escape --visual --select" ], desc = "Go back to the parent directory" },
	{ on = [ "l" ], run = [ "enter", "escape --visual --select" ], desc = "Enter the child directory" },

	{ on = [ "<Left>" ],  run = [ "leave", "escape --visual --select" ], desc = "Go back to the parent directory" },
	{ on = [ "<Right>" ], run = [ "enter", "escape --visual --select" ], desc = "Enter the child directory" },

	{ on = [ "g", "g" ], run = "arrow -99999999", desc = "Move cursor to the top" },
	{ on = [ "G" ],      run = "arrow 99999999",  desc = "Move cursor to the bottom" },

	# Selection
	{ on = [ "<Space>" ], run = [ "select --state=none", "arrow 1" ], desc = "Toggle the current selection state" },
	{ on = [ "v" ],       run = "visual_mode",                        desc = "Enter visual mode (selection mode)" },
	{ on = [ "V" ],       run = "visual_mode --unset",               desc = "Enter visual mode (unset mode)" },
	{ on = [ "<C-a>" ],   run = "select_all --state=true",           desc = "Select all files" },
	{ on = [ "<C-r>" ],   run = "select_all --state=none",           desc = "Inverse selection of all files" },

	# Operation
	{ on = [ "o" ],         run = "open",                                                 desc = "Open selected files" },
	{ on = [ "O" ],         run = "open --interactive",                                  desc = "Open selected files interactively" },
	{ on = [ "<Enter>" ],   run = "open",                                                 desc = "Open selected files" },
	{ on = [ "<C-Enter>" ], run = "open --interactive",                                  desc = "Open selected files interactively" },
	{ on = [ "y" ],         run = [ "yank", "escape --visual --select" ],               desc = "Yank selected files (copy)" },
	{ on = [ "Y" ],         run = [ "unyank", "escape --visual --select" ],             desc = "Cancel the yank status" },
	{ on = [ "x" ],         run = [ "yank --cut", "escape --visual --select" ],         desc = "Yank selected files (cut)" },
	{ on = [ "X" ],         run = "unyank",                                              desc = "Cancel the yank status" },
	{ on = [ "p" ],         run = "paste",                                               desc = "Paste yanked files" },
	{ on = [ "P" ],         run = "paste --force",                                      desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = [ "-" ],         run = "link",                                                desc = "Symlink the absolute path of yanked files" },
	{ on = [ "_" ],         run = "link --relative",                                    desc = "Symlink the relative path of yanked files" },
	{ on = [ "<C-h>" ],     run = "hardlink",                                            desc = "Hardlink yanked files" },
	{ on = [ "d" ],         run = [ "remove", "escape --visual --select" ],             desc = "Trash selected files" },
	{ on = [ "D" ],         run = [ "remove --permanently", "escape --visual --select" ], desc = "Permanently delete selected files" },
	{ on = [ "a" ],         run = "create",                                              desc = "Create a file (ends with / for directories)" },
	{ on = [ "r" ],         run = "rename --cursor=before_ext",                         desc = "Rename selected file(s)" },

	# Linemode
	{ on = [ "m", "s" ], run = "linemode size",        desc = "Set linemode to size" },
	{ on = [ "m", "p" ], run = "linemode permissions", desc = "Set linemode to permissions" },
	{ on = [ "m", "c" ], run = "linemode ctime",       desc = "Set linemode to ctime" },
	{ on = [ "m", "m" ], run = "linemode mtime",       desc = "Set linemode to mtime" },
	{ on = [ "m", "o" ], run = "linemode owner",       desc = "Set linemode to owner" },
	{ on = [ "m", "n" ], run = "linemode none",        desc = "Set linemode to none" },

	# Copy
	{ on = [ "c", "c" ], run = "copy path",             desc = "Copy the file path" },
	{ on = [ "c", "d" ], run = "copy dirname",          desc = "Copy the directory path" },
	{ on = [ "c", "f" ], run = "copy filename",         desc = "Copy the filename" },
	{ on = [ "c", "n" ], run = "copy name_without_ext", desc = "Copy the filename without extension" },

	# Filter
	{ on = [ "f" ], run = "filter --smart", desc = "Filter files" },

	# Find
	{ on = [ "/" ], run = "find --smart",            desc = "Find next file" },
	{ on = [ "?" ], run = "find --previous --smart", desc = "Find previous file" },
	{ on = [ "n" ], run = "find_arrow",              desc = "Go to the next found" },
	{ on = [ "N" ], run = "find_arrow --previous",   desc = "Go to the previous found" },

	# Searching
	{ on = [ "s" ], run = "search rg", desc = "Search files by content using ripgrep" },
	{ on = [ "S" ], run = "search fd", desc = "Search files by name using fd" },

	# Sorting
	{ on = [ ",", "m" ], run = [ "sort modified --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
	{ on = [ ",", "M" ], run = [ "sort modified --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
	{ on = [ ",", "c" ], run = [ "sort created --reverse=no", "linemode ctime" ],  desc = "Sort by created time" },
	{ on = [ ",", "C" ], run = [ "sort created --reverse", "linemode ctime" ],     desc = "Sort by created time (reverse)" },
	{ on = [ ",", "e" ], run = "sort extension --reverse=no",                      desc = "Sort by extension" },
	{ on = [ ",", "E" ], run = "sort extension --reverse",                         desc = "Sort by extension (reverse)" },
	{ on = [ ",", "a" ], run = "sort alphabetical --reverse=no",                   desc = "Sort alphabetically" },
	{ on = [ ",", "A" ], run = "sort alphabetical --reverse",                      desc = "Sort alphabetically (reverse)" },
	{ on = [ ",", "n" ], run = "sort natural --reverse=no",                        desc = "Sort naturally" },
	{ on = [ ",", "N" ], run = "sort natural --reverse",                           desc = "Sort naturally (reverse)" },
	{ on = [ ",", "s" ], run = [ "sort size --reverse=no", "linemode size" ],      desc = "Sort by size" },
	{ on = [ ",", "S" ], run = [ "sort size --reverse", "linemode size" ],         desc = "Sort by size (reverse)" },
	{ on = [ ",", "r" ], run = "sort random",                                      desc = "Sort randomly" },

	# Tabs
	{ on = [ "t" ], run = "tab_create --current", desc = "Create a new tab with CWD" },

	{ on = [ "1" ], run = "tab_switch 0", desc = "Switch to the first tab" },
	{ on = [ "2" ], run = "tab_switch 1", desc = "Switch to the second tab" },
	{ on = [ "3" ], run = "tab_switch 2", desc = "Switch to the third tab" },
	{ on = [ "4" ], run = "tab_switch 3", desc = "Switch to the fourth tab" },
	{ on = [ "5" ], run = "tab_switch 4", desc = "Switch to the fifth tab" },
	{ on = [ "6" ], run = "tab_switch 5", desc = "Switch to the sixth tab" },
	{ on = [ "7" ], run = "tab_switch 6", desc = "Switch to the seventh tab" },
	{ on = [ "8" ], run = "tab_switch 7", desc = "Switch to the eighth tab" },
	{ on = [ "9" ], run = "tab_switch 8", desc = "Switch to the ninth tab" },

	{ on = [ "[" ], run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
	{ on = [ "]" ], run = "tab_switch 1 --relative",  desc = "Switch to the next tab" },

	{ on = [ "{" ], run = "tab_swap -1", desc = "Swap current tab with previous tab" },
	{ on = [ "}" ], run = "tab_swap 1",  desc = "Swap current tab with next tab" },

	# Tasks
	{ on = [ "w" ], run = "tasks_show", desc = "Show task manager" },

	# Goto
	{ on = [ "g", "h" ],       run = "cd ~",             desc = "Go to the home directory" },
	{ on = [ "g", "c" ],       run = "cd ~/.config",     desc = "Go to the config directory" },
	{ on = [ "g", "d" ],       run = "cd ~/Downloads",   desc = "Go to the downloads directory" },
	{ on = [ "g", "t" ],       run = "cd /tmp",          desc = "Go to the temporary directory" },
	{ on = [ "g", "<Space>" ], run = "cd --interactive", desc = "Go to a directory interactively" },

	# Help - Multiple ways to access help for server-os
	{ on = [ "~" ],  run = "help", desc = "Open help" },
	{ on = [ "H" ],  run = "help", desc = "Open help (server-os custom)" },
	{ on = [ "?" ],  run = "help", desc = "Open help (server-os custom)" },
	{ on = [ "<F1>" ], run = "help", desc = "Open help" },
]

# Additional modes with help bindings
[tasks]
keymap = [
	{ on = [ "<Esc>" ], run = "close", desc = "Close task manager" },
	{ on = [ "<C-q>" ], run = "close", desc = "Close task manager" },
	{ on = [ "w" ],     run = "close", desc = "Close task manager" },

	{ on = [ "k" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "j" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Enter>" ], run = "inspect", desc = "Inspect the task" },
	{ on = [ "x" ],       run = "cancel",  desc = "Cancel the task" },

	# Help
	{ on = [ "~" ],    run = "help", desc = "Open help" },
	{ on = [ "H" ],    run = "help", desc = "Open help (server-os custom)" },
	{ on = [ "?" ],    run = "help", desc = "Open help (server-os custom)" },
	{ on = [ "<F1>" ], run = "help", desc = "Open help" },
]

[pick]
keymap = [
	{ on = [ "<C-q>" ],   run = "close",          desc = "Cancel picking" },
	{ on = [ "<Esc>" ],   run = "close",          desc = "Cancel picking" },
	{ on = [ "<Enter>" ], run = "close --submit", desc = "Submit the selection" },

	{ on = [ "k" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "j" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = [ "~" ],    run = "help", desc = "Open help" },
	{ on = [ "H" ],    run = "help", desc = "Open help (server-os custom)" },
	{ on = [ "?" ],    run = "help", desc = "Open help (server-os custom)" },
	{ on = [ "<F1>" ], run = "help", desc = "Open help" },
]

[input]
keymap = [
	{ on = [ "<C-q>" ],   run = "close",          desc = "Cancel input" },
	{ on = [ "<Enter>" ], run = "close --submit", desc = "Submit the input" },
	{ on = [ "<Esc>" ],   run = "escape",         desc = "Go back the normal mode, or cancel input" },

	# Mode
	{ on = [ "i" ], run = "insert",                              desc = "Enter insert mode" },
	{ on = [ "a" ], run = "insert --append",                     desc = "Enter append mode" },
	{ on = [ "I" ], run = [ "move -999", "insert" ],             desc = "Move to the BOL, and enter insert mode" },
	{ on = [ "A" ], run = [ "move 999", "insert --append" ],     desc = "Move to the EOL, and enter append mode" },
	{ on = [ "v" ], run = "visual",                              desc = "Enter visual mode" },
	{ on = [ "V" ], run = [ "move -999", "visual", "move 999" ], desc = "Enter visual mode and select all" },

	# Character-wise movement
	{ on = [ "h" ],       run = "move -1", desc = "Move back a character" },
	{ on = [ "l" ],       run = "move 1",  desc = "Move forward a character" },
	{ on = [ "<Left>" ],  run = "move -1", desc = "Move back a character" },
	{ on = [ "<Right>" ], run = "move 1",  desc = "Move forward a character" },
	{ on = [ "<C-b>" ],   run = "move -1", desc = "Move back a character" },
	{ on = [ "<C-f>" ],   run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement
	{ on = [ "b" ],     run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = [ "w" ],     run = "forward",               desc = "Move forward to the start of the next word" },
	{ on = [ "e" ],     run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },
	{ on = [ "<A-b>" ], run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = [ "<A-f>" ], run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = [ "0" ],     run = "move -999", desc = "Move to the BOL" },
	{ on = [ "$" ],     run = "move 999",  desc = "Move to the EOL" },
	{ on = [ "<C-a>" ], run = "move -999", desc = "Move to the BOL" },
	{ on = [ "<C-e>" ], run = "move 999",  desc = "Move to the EOL" },
	{ on = [ "<Home>" ], run = "move -999", desc = "Move to the BOL" },
	{ on = [ "<End>" ],  run = "move 999",  desc = "Move to the EOL" },

	# Delete
	{ on = [ "<Backspace>" ], run = "backspace",	        desc = "Delete the character before the cursor" },
	{ on = [ "<Delete>" ],    run = "backspace --under", desc = "Delete the character under the cursor" },
	{ on = [ "<C-h>" ],       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = [ "<C-d>" ],       run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = [ "<C-u>" ], run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = [ "<C-k>" ], run = "kill eol",      desc = "Kill forwards to the EOL" },
	{ on = [ "<C-w>" ], run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = [ "<A-d>" ], run = "kill forward",  desc = "Kill forwards to the end of the current word" },

	# Cut/Yank/Paste
	{ on = [ "d", "d" ], run = [ "kill bol", "kill eol" ],     desc = "Kill the current line" },
	{ on = [ "d", "$" ], run = "kill eol",                     desc = "Kill from the cursor to the EOL" },
	{ on = [ "d", "^" ], run = "kill bol",                     desc = "Kill from the cursor to the BOL" },
	{ on = [ "d", "w" ], run = "kill forward",                 desc = "Kill from the cursor to the end of the current word" },
	{ on = [ "y", "y" ], run = [ "yank --cut", "yank --copy" ], desc = "Copy the current line" },
	{ on = [ "p" ],      run = "paste",                        desc = "Paste" },
	{ on = [ "P" ],      run = "paste --before",               desc = "Paste before" },

	# Undo/Redo
	{ on = [ "u" ],     run = "undo", desc = "Undo" },
	{ on = [ "<C-r>" ], run = "redo", desc = "Redo" },

	# Help
	{ on = [ "~" ],    run = "help", desc = "Open help" },
	{ on = [ "H" ],    run = "help", desc = "Open help (server-os custom)" },
	{ on = [ "<F1>" ], run = "help", desc = "Open help" },
]

[confirm]
keymap = [
	{ on = [ "k" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "j" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Enter>" ], run = "close --submit", desc = "Submit the confirmation" },
	{ on = [ "y" ],       run = "close --submit", desc = "Submit the confirmation" },
	{ on = [ "n" ],       run = "close",          desc = "Cancel the confirmation" },

	# Help
	{ on = [ "~" ],    run = "help", desc = "Open help" },
	{ on = [ "H" ],    run = "help", desc = "Open help (server-os custom)" },
	{ on = [ "?" ],    run = "help", desc = "Open help (server-os custom)" },
	{ on = [ "<F1>" ], run = "help", desc = "Open help" },
]

[completion]
keymap = [
	{ on = [ "<C-q>" ],   run = "close",          desc = "Cancel completion" },
	{ on = [ "<Tab>" ],   run = "close --submit", desc = "Submit the completion" },
	{ on = [ "<Enter>" ], run = [ "close --submit", "close_input --submit" ], desc = "Submit the completion and input" },

	{ on = [ "<A-k>" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<A-j>" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = [ "~" ],    run = "help", desc = "Open help" },
	{ on = [ "H" ],    run = "help", desc = "Open help (server-os custom)" },
	{ on = [ "?" ],    run = "help", desc = "Open help (server-os custom)" },
	{ on = [ "<F1>" ], run = "help", desc = "Open help" },
]

[help]
keymap = [
	{ on = [ "<Esc>" ], run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = [ "q" ],     run = "close",  desc = "Exit the process" },
	{ on = [ "<C-q>" ], run = "close",  desc = "Hide the help" },

	# Navigation
	{ on = [ "k" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "j" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	# Filtering
	{ on = [ "/" ], run = "filter", desc = "Apply a filter for the help items" },
]